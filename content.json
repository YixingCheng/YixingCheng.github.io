{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"Yixing(Ethan) Cheng","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Leetcode weird solutions I","slug":"Leetcode-weird-solutions-I","date":"2017-08-03T01:02:47.000Z","updated":"2017-08-03T01:09:11.000Z","comments":true,"path":"2017/08/02/Leetcode-weird-solutions-I/","link":"","permalink":"http://yoursite.com/2017/08/02/Leetcode-weird-solutions-I/","excerpt":"","text":"RemoveNthFromEnd12345678910111213141516*还是走的快的点(fastNode)与走得慢的点(slowNode)路程差的问题public static ListNode removeNthFromEnd(ListNode head, int n) &#123; ListNode headNode = new ListNode(9527); headNode.next = head; ListNode fastNode = headNode; ListNode slowNode = headNode; while(fastNode.next != null)&#123; if(n &lt;= 0) slowNode = slowNode.next; fastNode = fastNode.next; n--; &#125; if(slowNode.next != null) slowNode.next = slowNode.next.next; return headNode.next; &#125; 评论： 9527是什么鬼？？？？ Best time to buy and sell stock IVState Machine State machine is the easiest way to understand stock problem, could solve all the stock problem in leetcode. 123456789101112131415161718192021222324252627class Solution &#123; public: int maxProfit(int k, vector&lt;int&gt;&amp; prices) &#123; int m = prices.size(); if(m==0 || m==1 || k == 0) return 0; if (k&gt;m/2)&#123; // simple case int ans = 0; for (int i=1; i&lt;m; ++i)&#123; ans += max(prices[i] - prices[i-1],0); &#125; return ans; &#125; vector&lt;vector&lt;int&gt;&gt; buy(k+1,vector&lt;int&gt;(m+1,0)); vector&lt;vector&lt;int&gt;&gt; sell(k+1,vector&lt;int&gt;(m+1,0)); vector&lt;int&gt; end(m+1,0); for(int i=1;i&lt;=k;i++) buy[i][0] = INT_MIN; for(int i=1;i&lt;=m;i++)&#123; for(int j=1;j&lt;=k;j++)&#123; //for the first buy state, need to compare the current price with the previous price. sell[0][0] are all initialized with 0, then sell[0][0] - prices[i-1] is the price of current first buy state buy[j][i] = max(buy[j][i-1], sell[j-1][i-1] - prices[i-1]); sell[j][i] = max(buy[j][i-1]+prices[i-1],sell[j][i-1]); &#125; &#125; return sell[k][m]; &#125; &#125;; 评论： 状态机都来了，看来我果然不适合搞CS. Link is here: https://discuss.leetcode.com/topic/48193/state-machine-is-the-easiest-way-to-understand-stock-problem-could-solve-all-the-stock-problem-in-leetcode","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-30T17:25:08.000Z","updated":"2017-07-30T17:25:08.000Z","comments":true,"path":"2017/07/30/hello-world/","link":"","permalink":"http://yoursite.com/2017/07/30/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}