{"meta":{"title":"Ethan's Blog","subtitle":"-- a developer's self cultivation","description":null,"author":"Yixing(Ethan) Cheng","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Install Tensorflow on MacOS","slug":"Install-Tensorflow-on-MacOS","date":"2017-08-10T00:21:43.000Z","updated":"2017-08-10T00:29:22.000Z","comments":true,"path":"2017/08/09/Install-Tensorflow-on-MacOS/","link":"","permalink":"http://yoursite.com/2017/08/09/Install-Tensorflow-on-MacOS/","excerpt":"","text":"教程：在 Mac OS X 上安装 TensorFlow##确定如何安装 TensorFlow 你可以选择一种方式安装 TensorFlow，支持下面的几种选择： virtualenv 「本地」 pip Docker 从源代码安装，更专业有单独的文档记录 我们建议使用 virtualenv 安装。virtualenv 是一个和其它 Python 项目开发隔离的虚拟 Python 环境，在同一台机器上不会干扰也不会被其它程序影响。virtualenv 安装过程中，你不仅仅安装了 TensorFlow 还有它的所有依赖包。（事实上这很简单）要开始使用 TensorFlow，你需要「启动」 virtualenv 环境。总而言之，virtualenv 提供了一个安全可靠的 TensorFlow 安装和运行机制。","categories":[],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"http://yoursite.com/tags/TensorFlow/"}]},{"title":"test","slug":"test","date":"2017-08-05T01:12:42.000Z","updated":"2017-08-05T01:12:42.000Z","comments":true,"path":"2017/08/04/test/","link":"","permalink":"http://yoursite.com/2017/08/04/test/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"A funny leetcode solution post","slug":"A-funny-leetcode-solution-post","date":"2017-08-05T00:45:09.000Z","updated":"2017-08-05T00:45:30.000Z","comments":true,"path":"2017/08/04/A-funny-leetcode-solution-post/","link":"","permalink":"http://yoursite.com/2017/08/04/A-funny-leetcode-solution-post/","excerpt":"","text":"H-Index评论： 这个答案的帖子实在太欢乐了，成了中国苦逼leetcoder的报名帖了。 Link is here: https://discuss.leetcode.com/topic/23307/my-o-n-time-solution-use-java","categories":[],"tags":[]},{"title":"Leetcode weird solutions I","slug":"Leetcode-weird-solutions-I","date":"2017-08-03T01:02:47.000Z","updated":"2017-08-03T01:09:11.000Z","comments":true,"path":"2017/08/02/Leetcode-weird-solutions-I/","link":"","permalink":"http://yoursite.com/2017/08/02/Leetcode-weird-solutions-I/","excerpt":"","text":"RemoveNthFromEnd12345678910111213141516*还是走的快的点(fastNode)与走得慢的点(slowNode)路程差的问题public static ListNode removeNthFromEnd(ListNode head, int n) &#123; ListNode headNode = new ListNode(9527); headNode.next = head; ListNode fastNode = headNode; ListNode slowNode = headNode; while(fastNode.next != null)&#123; if(n &lt;= 0) slowNode = slowNode.next; fastNode = fastNode.next; n--; &#125; if(slowNode.next != null) slowNode.next = slowNode.next.next; return headNode.next; &#125; 评论： 9527是什么鬼？？？？ Best time to buy and sell stock IVState Machine State machine is the easiest way to understand stock problem, could solve all the stock problem in leetcode. 123456789101112131415161718192021222324252627class Solution &#123; public: int maxProfit(int k, vector&lt;int&gt;&amp; prices) &#123; int m = prices.size(); if(m==0 || m==1 || k == 0) return 0; if (k&gt;m/2)&#123; // simple case int ans = 0; for (int i=1; i&lt;m; ++i)&#123; ans += max(prices[i] - prices[i-1],0); &#125; return ans; &#125; vector&lt;vector&lt;int&gt;&gt; buy(k+1,vector&lt;int&gt;(m+1,0)); vector&lt;vector&lt;int&gt;&gt; sell(k+1,vector&lt;int&gt;(m+1,0)); vector&lt;int&gt; end(m+1,0); for(int i=1;i&lt;=k;i++) buy[i][0] = INT_MIN; for(int i=1;i&lt;=m;i++)&#123; for(int j=1;j&lt;=k;j++)&#123; //for the first buy state, need to compare the current price with the previous price. sell[0][0] are all initialized with 0, then sell[0][0] - prices[i-1] is the price of current first buy state buy[j][i] = max(buy[j][i-1], sell[j-1][i-1] - prices[i-1]); sell[j][i] = max(buy[j][i-1]+prices[i-1],sell[j][i-1]); &#125; &#125; return sell[k][m]; &#125; &#125;; 评论： 状态机都来了，看来我果然不适合搞CS. Link is here: https://discuss.leetcode.com/topic/48193/state-machine-is-the-easiest-way-to-understand-stock-problem-could-solve-all-the-stock-problem-in-leetcode","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-30T17:25:08.000Z","updated":"2017-07-30T17:25:08.000Z","comments":true,"path":"2017/07/30/hello-world/","link":"","permalink":"http://yoursite.com/2017/07/30/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}